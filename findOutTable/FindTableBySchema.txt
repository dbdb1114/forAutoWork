# 여러 개의 검색할 폴더 경로를 배열로 정의합니다.
$testProjectPaths = @(
	검색대상 폴더 경로
)

# 제외할 폴더명을 배열로 정의합니다.
$excludeFolders = @("target", "bin", "obj")  # 제외하고 싶은 폴더명을 추가하세요.

# 배열에 포함된 각 폴더 경로를 순회합니다.
foreach ($testProjectPath in $testProjectPaths) {
    # 현재 폴더 경로의 최하위 디렉토리 이름을 추출합니다.
    $lowestDirName = Split-Path $testProjectPath -Leaf
    # 추출된 디렉토리 이름을 기반으로 출력 파일명을 설정합니다.
    $testOutputFile = "C:\programing\my\$lowestDirName`_using_table.txt"

    # 만약 출력 파일이 존재하지 않으면, UTF-8 인코딩으로 새 파일을 생성합니다.
    if (-Not (Test-Path $testOutputFile)) {
        # 파일을 생성하고 그 결과를 숨기기 위해 Out-Null을 사용합니다.
        New-Item -Path $testOutputFile -ItemType File | Out-Null
    }

    # 현재 폴더 경로($testProjectPath)의 모든 파일을 재귀적으로 검색합니다.
    Get-ChildItem -Path $testProjectPath -Recurse | ForEach-Object {
        # 폴더인지 여부를 확인하고, 만약 폴더라면 제외할 폴더 리스트에 포함되는지 확인합니다.
        if ($_.PSIsContainer -and $excludeFolders -contains $_.Name) {
            # 제외할 폴더에 포함되면 해당 폴더는 무시하고 다음으로 넘어갑니다.
            Write-Host "Excluding folder: $($_.FullName)"
            return
        }
        elseif (-Not $_.PSIsContainer) {
            # 파일 내용에서 "dkagbpr.[a-zA-Z0-9_]+" 패턴을 검색합니다.
            # 해당 패턴이 발견되면 결과를 가져옵니다.
            Select-String -Pattern "dkagbpr\.[a-zA-Z0-9_]+" -Path $_.FullName | ForEach-Object {
                # 현재 처리 중인 파일 경로를 변수에 저장합니다.
                $filePath = $_.Path
                # 매칭된 테이블명을 변수에 저장하고 앞뒤 공백을 제거합니다.
                $tableNm = $_.Matches.Value.Trim()

                # 현재 파일을 처리 중임을 출력합니다.
                Write-Host "Processing file: $filePath"

                # 출력 파일에 파일 경로, 테이블명, 구분선을 UTF-8 인코딩으로 추가합니다.
                Add-Content -Path $testOutputFile -Value ("filePath : $filePath") -Encoding UTF8
                Add-Content -Path $testOutputFile -Value ("tableNm : $tableNm") -Encoding UTF8
                Add-Content -Path $testOutputFile -Value ("------") -Encoding UTF8
            }
        }
    }
}